# http://travis-ci.org/#!/jcb91/IPython-notebook-extensions
language: python
sudo: false
addons:
  apt_packages:
    - pandoc  # for preprocessor tests
    - inkscape  # for preprocessor tests
matrix:
  fast_finish: true
  # Use the built-in venv for linux builds
  # 3.5 as it isn't installed by default. Let tox handle other versions.
  include:
    #   env: TOXENV=docs
    - os: linux
      python: '3.4'
      env: TOXENV=check
    - os: linux
      python: '3.4'
      env: TOXENV=py27-notebook,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=py33-notebook,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=py34-notebook40,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=py34-notebook41,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=py34-notebook42,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=py34-notebook4x,coveralls,codecov
    - os: linux
      python: '3.5'
      env: TOXENV=py35-notebook,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=pypy-notebook,coveralls,codecov
    - os: linux
      python: '3.4'
      env: TOXENV=js
    # Use generic language on osx, get python via terryfy during before_install
    - os: osx
      language: generic
      env: OSX_PYTHON=2.7 TOXENV=py27-notebook,coveralls,codecov
    - os: osx
      language: generic
      env: OSX_PYTHON=3.3 TOXENV=py33-notebook,coveralls,codecov
    - os: osx
      language: generic
      env: OSX_PYTHON=3.4 TOXENV=py34-notebook,coveralls,codecov
    - os: osx
      language: generic
      env: OSX_PYTHON=3.5 TOXENV=py35-notebook,coveralls,codecov
    - os: osx
      language: generic
      env: OSX_PYTHON=3.4 TOXENV=js
    # finally, appveyor downloads:
    - os: linux
      python: '3.4'
      env: TOXENV=appveyorartifacts
  allow_failures:
    - env: TOXENV=appveyorartifacts
    - env: TOXENV=check
    - env: TOXENV=pypy-notebook,coveralls,codecov
env:
  global:
    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - SEGFAULT_SIGNALS=all
before_install:
  - uname -a
  - id -un
  - id -Gn
  # install casperjs for phantom(?)
  - 'if [[ ${TOXENV} == js ]]; then npm install -g casperjs; fi'
  # install python on osx
  - 'if [[ ${OSX_PYTHON} ]]; then curl https://raw.githubusercontent.com/MacPython/terryfy/master/travis_tools.sh > travis_tools.sh; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then source travis_tools.sh; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then get_python_environment macpython $OSX_PYTHON venv; fi'
  # install 3.4 as it's the default for tox environments like clean, check
  - 'if [[ ${OSX_PYTHON} ]] && [[ ${OSX_PYTHON} != "3.4" ]]; then install_macpython 3.4; fi'
  # check which python installs are present/active
  - 'if [[ ${OSX_PYTHON} ]]; then echo "$PYTHON_EXE"; fi;'
  - 'if [[ ${OSX_PYTHON} ]]; then if [[ $(which python   ) ]]; then ls -l $(which python   ); else echo "missing"; fi; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then if [[ $(which python2.7) ]]; then ls -l $(which python2.7); else echo "missing"; fi; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then if [[ $(which python3.3) ]]; then ls -l $(which python3.3); else echo "missing"; fi; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then if [[ $(which python3.4) ]]; then ls -l $(which python3.4); else echo "missing"; fi; fi'
  - 'if [[ ${OSX_PYTHON} ]]; then if [[ $(which python3.5) ]]; then ls -l $(which python3.5); else echo "missing"; fi; fi'
install:
  - pip install tox
  - virtualenv --version
script:
  - tox -v -e ${TOXENV}
after_failure:
  - more .tox/log/* | cat
  - more .tox/*/log/* | cat
after_success:
before_cache:
  - rm -rf $HOME/.cache/pip/log
cache:
  directories:
    - $HOME/.cache/pip
notifications:
  email: false
